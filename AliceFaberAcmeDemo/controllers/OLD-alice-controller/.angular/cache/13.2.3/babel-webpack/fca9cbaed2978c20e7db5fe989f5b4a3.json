{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/agent.service\";\nexport let ConnectionResolverService = /*#__PURE__*/(() => {\n  class ConnectionResolverService {\n    constructor(agentService) {\n      this.agentService = agentService;\n    }\n\n    resolve(route, state) {\n      return this.agentService.getConnections().pipe(map(connections => {\n        if (route.routeConfig.path === 'active') {\n          return connections.filter(connection => connection.state === 'active' || connection.state === 'request');\n        } else if (route.routeConfig.path === 'pending') {\n          return connections.filter(connection => connection.state === 'invitation');\n        } else {\n          return [];\n        }\n      }));\n    }\n\n  }\n\n  ConnectionResolverService.ɵfac = function ConnectionResolverService_Factory(t) {\n    return new (t || ConnectionResolverService)(i0.ɵɵinject(i1.AgentService));\n  };\n\n  ConnectionResolverService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConnectionResolverService,\n    factory: ConnectionResolverService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConnectionResolverService;\n})();","map":null,"metadata":{},"sourceType":"module"}