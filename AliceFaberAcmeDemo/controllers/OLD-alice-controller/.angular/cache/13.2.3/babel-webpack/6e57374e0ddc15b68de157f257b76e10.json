{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { map, debounceTime, distinctUntilChanged, filter, tap } from 'rxjs/operators';\nimport { timer, BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/agent.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction AcceptConnectionComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invitation object is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AcceptConnectionComponent_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Invalid object: \", ctx_r3.invitation.errors.json, \"\");\n  }\n}\n\nfunction AcceptConnectionComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, AcceptConnectionComponent_div_6_div_1_Template, 2, 0, \"div\", 8);\n    i0.ɵɵtemplate(2, AcceptConnectionComponent_div_6_div_2_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.invitation.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.invitation.errors.json);\n  }\n}\n\nfunction AcceptConnectionComponent_small_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Unable to process that URL: \", i0.ɵɵpipeBind1(2, 1, ctx_r1.invitationUrlError$), \"\");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nfunction debouncedInvitationValidator() {\n  return control => {\n    return timer(300).pipe(map(() => {\n      try {\n        JSON.parse(control.value);\n        return null;\n      } catch (error) {\n        return {\n          json: error.message\n        };\n      }\n    }));\n  };\n}\n\nexport let AcceptConnectionComponent = /*#__PURE__*/(() => {\n  class AcceptConnectionComponent {\n    constructor(agentService, fb, router) {\n      this.agentService = agentService;\n      this.fb = fb;\n      this.router = router;\n      this.invitationUrlError$ = new BehaviorSubject(null);\n      this.form = this.fb.group({\n        invitation: [null, Validators.required, debouncedInvitationValidator()],\n        invitationUrl: [null, Validators.nullValidator]\n      });\n    }\n\n    get invitation() {\n      return this.form && this.form.get('invitation');\n    }\n\n    get invitationUrl() {\n      return this.form && this.form.get('invitationUrl');\n    }\n\n    ngOnInit() {\n      this.invitationUrl.valueChanges.pipe(debounceTime(300), distinctUntilChanged(), tap(() => this.invitationUrlError$.next(null)), filter(value => !!value), map(value => {\n        try {\n          const url = new URL(value);\n          const invitationParam = url.searchParams.get('c_i');\n\n          if (!invitationParam) {\n            throw new Error();\n          }\n\n          this.invitation.setValue(JSON.stringify(JSON.parse(atob(invitationParam)), null, 4));\n          this.invitation.markAsDirty();\n          this.invitation.updateValueAndValidity();\n        } catch (error) {\n          this.invitationUrlError$.next('Invalid invitation URL');\n        }\n      })).subscribe();\n    }\n\n    onSubmit() {\n      if (!this.form.valid) {\n        return;\n      }\n\n      this.agentService.receiveInvitation(this.invitation.value).pipe(map(() => this.router.navigateByUrl('/connections'))).subscribe();\n    }\n\n  }\n\n  AcceptConnectionComponent.ɵfac = function AcceptConnectionComponent_Factory(t) {\n    return new (t || AcceptConnectionComponent)(i0.ɵɵdirectiveInject(i1.AgentService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  AcceptConnectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AcceptConnectionComponent,\n    selectors: [[\"app-accept-connection\"]],\n    decls: 15,\n    vars: 11,\n    consts: [[1, \"container\"], [\"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"invitationObject\"], [\"id\", \"invitationObject\", \"cols\", \"30\", \"rows\", \"10\", 1, \"form-control\", 3, \"ngClass\", \"formControl\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [\"for\", \"invitationUrl\"], [\"type\", \"text\", \"id\", \"invitationUrl\", 1, \"form-control\", 3, \"formControl\"], [4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-lg\", \"btn-block\", 3, \"disabled\", \"click\"], [1, \"invalid-feedback\", \"d-block\"]],\n    template: function AcceptConnectionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Paste invitation object block:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"textarea\", 4);\n        i0.ɵɵtemplate(6, AcceptConnectionComponent_div_6_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelementStart(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Alternatively paste an invitation URL:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵtemplate(11, AcceptConnectionComponent_small_11_Template, 3, 3, \"small\", 8);\n        i0.ɵɵpipe(12, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function AcceptConnectionComponent_Template_button_click_13_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(14, \"Accept Invitation \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, (ctx.invitation.touched || ctx.invitation.dirty) && ctx.invitation.invalid))(\"formControl\", ctx.invitation);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.invitation.touched || ctx.invitation.dirty) && ctx.invitation.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.invitationUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(12, 7, ctx.invitationUrlError$));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i4.NgClass, i2.NgControlStatus, i2.FormControlDirective, i4.NgIf],\n    pipes: [i4.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{display:block;padding:1rem}\"]\n  });\n  return AcceptConnectionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}